name: Build 

on: ['push', 'workflow_dispatch']

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ibrahimardic
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ibrahimardic/airline-manager:latest .

      - name: Docker Push Image
        run: |
          docker push ibrahimardic/airline-manager:latest

  model_test:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ibrahimardic
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          docker pull ibrahimardic/airline-manager:latest

      - name: Run Container
        run: |
          docker run -d -p 8000:8000 ibrahimardic/airline-manager:latest

      - name: Wait for Server to Start
        run: |
          until curl -s http://127.0.0.1:8000; do
            echo "Waiting for server to be available..."
            sleep 5
          done

      - name: Run Pytest
        run: |
          docker exec $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest") bash -c "source venv/bin/activate && pytest --ds=AirlineManager.settings"

      - name: Stop Container 
        run: |
          docker stop $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest")

  lint:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Install Dependencies for Linting
        run: |
          pip install flake8 black

      - name: Run Flake8 Linting
        run: |
          flake8 . --max-line-length=88 --exclude=migrations,__pycache__,env,venv

      - name: Check Code Formatting with Black
        run: |
          black --check .

  airline_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint, model_test]
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ibrahimardic
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          docker pull ibrahimardic/airline-manager:latest

      - name: Run Container
        run: |
          docker run -d -p 8000:8000 ibrahimardic/airline-manager:latest
      
      - name: Check Docker Logs
        run: |
          docker logs $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest")

      - name: Wait for Server to Start
        run: |
          until curl -s http://127.0.0.1:8000; do
            echo "Waiting for server to be available..."
            sleep 5
          done

      - name: Run Airline Postman Tests
        run: |
          newman run tests/Airline_Crud_Operations.json --delay-request 1000

      - name: Stop Container 
        run: |
          docker stop $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest")

  authentication_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint, model_test]
    steps:

      - name: Get Code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ibrahimardic
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image
        run: |
          docker pull ibrahimardic/airline-manager:latest

      - name: Run Container
        run: |
          docker run -d -p 8000:8000 ibrahimardic/airline-manager:latest

      - name: Check Docker Logs
        run: |
          docker logs $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest")

      - name: Wait for Server to be Available
        run: |
          until curl -s http://127.0.0.1:8000; do
            echo "Waiting for server to be available..."
            sleep 5
          done

      - name: Run Authentication Postman Tests
        run: |
          newman run tests/Authentication_endpoints.json --delay-request 1000

      - name: Stop Container 
        run: |
          docker stop $(docker ps -q --filter "ancestor=ibrahimardic/airline-manager:latest")

  deploy:
    runs-on: ubuntu-latest
    needs: [setup, lint, model_test, airline_tests, authentication_tests]
    steps:
    - name: Get code
      uses: actions/checkout@v4

    - name: Set up SSH key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" | base64 -d > ec2-key.pem
        chmod 600 ec2-key.pem

    - name: Add EC2 to known hosts
      run: ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    - name: SSH into EC2 and deploy securely
      env:
        DOCKER_USERNAME: ibrahimardic
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        ssh -i ec2-key.pem ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          set -e  
          sudo yum update -y
          sudo yum install -y docker
          sudo service docker start
          sudo usermod -a -G docker $USER
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker pull ibrahimardic/airline-manager:latest
          docker stop airline-container || true
          docker rm airline-container || true
          docker run -d -p 80:80 --name airline-container ibrahimardic/airline-manager:latest
        EOF

    - name: Clean up SSH key
      run: rm -f ec2-key.pem