name: Airline CRUD and Authentication Tests

on: ['push', 'workflow_dispatch']

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-deps.outputs.cache-hit }}

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Create Virtual Environment
        run: python -m venv venv

      - name: Cache Dependencies
        id: cache-deps
        uses: actions/cache@v4
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            venv-${{ runner.os }}-

      - name: Install Dependencies
        run: |
          . venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Apply Migrations
        run: |
          . venv/bin/activate
          python manage.py migrate

      - name: Install Newman
        run: npm install -g newman
        
  model-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Get Code
        uses: actions/checkout@v4
      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
      - name: Run pytest
        run: |
          source venv/bin/activate
          pytest --ds=AirlineManager.settings

  lint:
    runs-on: ubuntu-latest
    needs: setup
    
    steps: 
      - name: Get Code
        uses: actions/checkout@v4
      
      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Run Flake8 
        run: |
          . venv/bin/activate
          flake8 . --max-line-length=88 --exclude=migrations,__pycache__,env,venv
      
      - name: Check Code Formatting
        run: |
          . venv/bin/activate
          black --check .

  airline_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint, model-test]

    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Run Server in Background
        run: |
          . venv/bin/activate
          python manage.py runserver 0.0.0.0:8000 &

      - name: Wait for Server to Start
        run: sleep 10

      - name: Run Airline CRUD Postman Tests
        run: |
          newman run tests/Airline_Crud_Operations.json --delay-request 1000

      - name: Stop Server After Tests
        run: |
          fuser -k 8000/tcp

  authentication_tests:
    runs-on: ubuntu-latest
    needs: [setup, lint, model-test]
    steps:
      - name: Get Code
        uses: actions/checkout@v4

      - name: Restore Cached Dependencies
        uses: actions/cache@v4
        with:
          path: venv
          key: venv-${{ runner.os }}-${{ hashFiles('requirements.txt') }}

      - name: Run Server in Background
        run: |
          . venv/bin/activate
          python manage.py runserver 0.0.0.0:8000 &

      - name: Wait for Server to Start
        run: sleep 10

      - name: Run Authentication Postman Tests
        run: |
          newman run tests/Authentication_endpoints.json --delay-request 1000

      - name: Stop Server After Tests
        run: |
          fuser -k 8000/tcp